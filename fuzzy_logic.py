# -*- coding: utf-8 -*-
"""fuzzy_logic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S_S2yxnlMgR2OoicRvGFz1RzMyMtCzjm
"""

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

def define_fuzzy_system():
    age = ctrl.Antecedent(np.arange(30, 91, 1), 'age')
    chol = ctrl.Antecedent(np.arange(100, 601, 1), 'chol')
    trestbps = ctrl.Antecedent(np.arange(80, 201, 1), 'trestbps')
    thalach = ctrl.Antecedent(np.arange(60, 221, 1), 'thalach')
    oldpeak = ctrl.Antecedent(np.arange(0, 6.1, 0.1), 'oldpeak')

    risk = ctrl.Consequent(np.arange(0, 101, 1), 'risk')

    age.automf(3)
    chol.automf(3)
    trestbps.automf(3)
    thalach.automf(3)
    oldpeak.automf(3)

    risk['low'] = fuzz.trimf(risk.universe, [0, 20, 40])
    risk['medium'] = fuzz.trimf(risk.universe, [30, 50, 70])
    risk['high'] = fuzz.trimf(risk.universe, [60, 80, 100])

    rules = [
        ctrl.Rule(chol['poor'] & trestbps['poor'], risk['high']),
        ctrl.Rule(thalach['good'] & age['good'], risk['low']),
        ctrl.Rule(oldpeak['poor'] & age['average'], risk['medium']),
        ctrl.Rule(chol['average'] & trestbps['average'], risk['medium']),
    ]

    system = ctrl.ControlSystem(rules)
    simulation = ctrl.ControlSystemSimulation(system)
    return simulation

def compute_risk(age, sex, cp, trestbps, chol, fbs, restecg, thalach, exang, oldpeak, slope, ca, thal):
    system = define_fuzzy_system()

    system.input['age'] = age
    system.input['chol'] = chol
    system.input['trestbps'] = trestbps
    system.input['thalach'] = thalach
    system.input['oldpeak'] = oldpeak

    system.compute()
    risk_score = system.output['risk']

    if risk_score <= 33:
        return "Low"
    elif risk_score <= 66:
        return "Medium"
    else:
        return "High"